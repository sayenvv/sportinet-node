deploy-dev:
  before_script:
    - apt-get update
    - apt install -y openssh-client
    - echo "$PRIVATE_KEY" > "$(pwd)/private_key.pem"
    - chmod 400 private_key.pem
  stage: deploy
  script:
    - ssh -i private_key.pem -T -o StrictHostKeyChecking=no ubuntu@192.168.15.37 "cd dev-env/hibiscus-dev;make deploy-dev"
  only:
    - DEV
  tags:
    - dev-ci

deploy-qa:
  before_script:
    - apt-get update
    - apt install -y openssh-client
    - echo "$PRIVATE_KEY" > "$(pwd)/private_key.pem"
    - chmod 400 private_key.pem
  stage: deploy
  script:
    - ssh -i private_key.pem -T -o StrictHostKeyChecking=no ubuntu@192.168.15.10 "cd server/hibiscus-dev;make deploy-qa"
  only:
    - QA/LOCAL
  when: manual
  tags:
    - dev-ci

test-user-management:
  before_script:
    - apt-get update
    - apt install -y openssh-client
    - echo "$PRIVATE_KEY" > "$(pwd)/private_key.pem"
    - chmod 400 private_key.pem
  stage: .post
  script:
    - ssh -i private_key.pem -T -o StrictHostKeyChecking=no ubuntu@192.168.15.37 "cd dev-env/hibiscus-dev;make test-user-management"
  only:
    - DEV
  tags:
    - dev-ci

test-workflow:
  before_script:
    - apt-get update
    - apt install -y openssh-client
    - echo "$PRIVATE_KEY" > "$(pwd)/private_key.pem"
    - chmod 400 private_key.pem
  stage: .post
  script:
    - ssh -i private_key.pem -T -o StrictHostKeyChecking=no ubuntu@192.168.15.37 "cd dev-env/hibiscus-dev;make test-workflow"
  only:
    - DEV
  tags:
    - dev-ci

test-subscriber:
  before_script:
    - apt-get update
    - apt install -y openssh-client
    - echo "$PRIVATE_KEY" > "$(pwd)/private_key.pem"
    - chmod 400 private_key.pem
  stage: .post
  script:
    - ssh -i private_key.pem -T -o StrictHostKeyChecking=no ubuntu@192.168.15.37 "cd dev-env/hibiscus-dev;make test-subscriber"
  only:
    - DEV
  tags:
    - dev-ci

test-druglist:
  before_script:
    - apt-get update
    - apt install -y openssh-client
    - echo "$PRIVATE_KEY" > "$(pwd)/private_key.pem"
    - chmod 400 private_key.pem
  stage: .post
  script:
    - ssh -i private_key.pem -T -o StrictHostKeyChecking=no ubuntu@192.168.15.37 "cd dev-env/hibiscus-dev;make test-druglist"
  only:
    - DEV
  tags:
    - dev-ci

run-dev-migrations:
  before_script:
    - apt-get update
    - apt install -y openssh-client
    - echo "$PRIVATE_KEY" > "$(pwd)/private_key.pem"
    - chmod 400 private_key.pem
  stage: .post
  script:
    - ssh -i private_key.pem -T -o StrictHostKeyChecking=no ubuntu@192.168.15.37 "cd dev-env/hibiscus-dev;make run-migrations"
  only:
    - DEV
  when: manual
  tags:
    - dev-ci

run-dev-customer-migrations:
  before_script:
    - apt-get update
    - apt install -y openssh-client
    - echo "$PRIVATE_KEY" > "$(pwd)/private_key.pem"
    - chmod 400 private_key.pem
  stage: .post
  script:
    - ssh -i private_key.pem -T -o StrictHostKeyChecking=no ubuntu@192.168.15.37 "cd dev-env/hibiscus-dev;make run-migrations"
  only:
    - DEV
  when: manual
  tags:
    - dev-ci

run-qa-migrations:
  before_script:
    - apt-get update
    - apt install -y openssh-client
    - echo "$PRIVATE_KEY" > "$(pwd)/private_key.pem"
    - chmod 400 private_key.pem
  stage: .post
  script:
    - ssh -i private_key.pem -T -o StrictHostKeyChecking=no ubuntu@192.168.15.10 "cd server/hibiscus-dev;make run-customer-migrations"
  only:
    - QA/LOCAL
  when: manual
  tags:
    - dev-ci

run-qa-customer-migrations:
  before_script:
    - apt-get update
    - apt install -y openssh-client
    - echo "$PRIVATE_KEY" > "$(pwd)/private_key.pem"
    - chmod 400 private_key.pem
  stage: .post
  script:
    - ssh -i private_key.pem -T -o StrictHostKeyChecking=no ubuntu@192.168.15.10 "cd server/hibiscus-dev;make run-customer-migrations"
  only:
    - QA/LOCAL
  when: manual
  tags:
    - dev-ci

# sonarqube check
sonarqube-check:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - "sonar-scanner -Dsonar.projectKey=${SONAR_PROJECT_KEY} -Dsonar.host.url=${SONAR_HOST} -Dsonar.token=${SONAR_TOKEN}"
  allow_failure: false
  only: [merge_requests]
  tags:
    - dev-ci
